{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\womon\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uC774\\uD604\\uC815\\\\react-app\\\\src\\\\components\\\\TOC.js\";\n// Component를 위해서 꼭 있어야 함\nimport React, { Component } from 'react'; // 여러개의 엘리먼트를 자동으로 생성하는 경우 console창에서 각각의 리스트 항목들은 키라는 props를 가지고 있어야 한다는 \n// 에러가 뜨는데 이때 key를 이용하여 각각의 목록을 다른 것들과 구분할 수 있도록 식별자를 써주어야 함\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TOC extends Component {\n  render() {\n    var lists = [];\n    var data = this.props.data;\n    var i = 0;\n\n    while (i < data.length) {\n      lists.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/content/\" + data[i].id,\n          children: data[i].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 41\n        }, this)\n      }, data[i].id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 20\n      }, this));\n      i = i + 1;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: lists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this);\n  }\n\n} //export를 이용해서 TOC.js를 가져다 쓰는 쪽에서 TOC라는 클래스를 가져다 쓸수 있게 됨(외부에서 연결)\n\n\nexport default TOC;","map":{"version":3,"sources":["C:/Users/womon/OneDrive/바탕 화면/이현정/react-app/src/components/TOC.js"],"names":["React","Component","TOC","render","lists","data","props","i","length","push","id","title"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AACA;;;;AACA,MAAMC,GAAN,SAAkBD,SAAlB,CAA2B;AACvBE,EAAAA,MAAM,GAAE;AACN,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;AACA,QAAIE,CAAC,GAAG,CAAR;;AACA,WAAMA,CAAC,GAAGF,IAAI,CAACG,MAAf,EAAsB;AACpBJ,MAAAA,KAAK,CAACK,IAAN,eAAW;AAAA,+BAAqB;AAAG,UAAA,IAAI,EAAE,cAAYJ,IAAI,CAACE,CAAD,CAAJ,CAAQG,EAA7B;AAAA,oBAAkCL,IAAI,CAACE,CAAD,CAAJ,CAAQI;AAA1C;AAAA;AAAA;AAAA;AAAA;AAArB,SAASN,IAAI,CAACE,CAAD,CAAJ,CAAQG,EAAjB;AAAA;AAAA;AAAA;AAAA,cAAX;AACAH,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACD;;AACD,wBACE;AAAA,6BACM;AAAA,kBACKH;AADL;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAhBsB,C,CAkB3B;;;AACA,eAAeF,GAAf","sourcesContent":["// Component를 위해서 꼭 있어야 함\r\nimport React, { Component } from 'react';\r\n\r\n// 여러개의 엘리먼트를 자동으로 생성하는 경우 console창에서 각각의 리스트 항목들은 키라는 props를 가지고 있어야 한다는 \r\n// 에러가 뜨는데 이때 key를 이용하여 각각의 목록을 다른 것들과 구분할 수 있도록 식별자를 써주어야 함\r\nclass TOC extends Component{\r\n    render(){\r\n      var lists = [];\r\n      var data = this.props.data;\r\n      var i = 0;\r\n      while(i < data.length){\r\n        lists.push(<li key={data[i].id}><a href={\"/content/\"+data[i].id}>{data[i].title}</a></li>);\r\n        i = i + 1;\r\n      }\r\n      return(\r\n        <nav>\r\n              <ul>\r\n                  {lists}\r\n              </ul>\r\n        </nav>\r\n      );\r\n    }\r\n  }\r\n//export를 이용해서 TOC.js를 가져다 쓰는 쪽에서 TOC라는 클래스를 가져다 쓸수 있게 됨(외부에서 연결)\r\nexport default TOC;\r\n"]},"metadata":{},"sourceType":"module"}