{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\womon\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uC774\\uD604\\uC815\\\\react-app\\\\src\\\\components\\\\TOC.js\";\n// Component를 위해서 꼭 있어야 함\nimport React, { Component } from 'react'; // 여러개의 엘리먼트를 자동으로 생성하는 경우 console창에서 각각의 리스트 항목들은 키라는 props를 가지고 있어야 한다는 \n// 에러가 뜨는데 이때 key를 이용하여 각각의 목록을 다른 것들과 구분할 수 있도록 식별자를 써주어야 함\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TOC extends Component {\n  render() {\n    console.log('TOC render');\n    var lists = [];\n    var data = this.props.data;\n    var i = 0;\n\n    while (i < data.length) {\n      lists.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/content/\" + data[i].id,\n          \"data-id\": data[i].id,\n          onClick: function (e) {\n            e.preventDefault();\n            this.props.onChangePage(e.target.dataset.id);\n          }.bind(this),\n          children: data[i].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)\n      }, data[i].id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this));\n      i = i + 1;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: lists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);\n  }\n\n} //export를 이용해서 TOC.js를 가져다 쓰는 쪽에서 TOC라는 클래스를 가져다 쓸수 있게 됨(외부에서 연결)\n\n\nexport default TOC;","map":{"version":3,"sources":["C:/Users/womon/OneDrive/바탕 화면/이현정/react-app/src/components/TOC.js"],"names":["React","Component","TOC","render","console","log","lists","data","props","i","length","push","id","e","preventDefault","onChangePage","target","dataset","bind","title"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AACA;;;;AACA,MAAMC,GAAN,SAAkBD,SAAlB,CAA2B;AACvBE,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;AACA,QAAIE,CAAC,GAAG,CAAR;;AACA,WAAMA,CAAC,GAAGF,IAAI,CAACG,MAAf,EAAsB;AACpBJ,MAAAA,KAAK,CAACK,IAAN,eACE;AAAA,+BACE;AACE,UAAA,IAAI,EAAE,cAAYJ,IAAI,CAACE,CAAD,CAAJ,CAAQG,EAD5B;AAEE,qBAASL,IAAI,CAACE,CAAD,CAAJ,CAAQG,EAFnB;AAGE,UAAA,OAAO,EAAE,UAASC,CAAT,EAAW;AAClBA,YAAAA,CAAC,CAACC,cAAF;AACA,iBAAKN,KAAL,CAAWO,YAAX,CAAwBF,CAAC,CAACG,MAAF,CAASC,OAAT,CAAiBL,EAAzC;AACD,WAHQ,CAGPM,IAHO,CAGF,IAHE,CAHX;AAAA,oBAOIX,IAAI,CAACE,CAAD,CAAJ,CAAQU;AAPZ;AAAA;AAAA;AAAA;AAAA;AADF,SAASZ,IAAI,CAACE,CAAD,CAAJ,CAAQG,EAAjB;AAAA;AAAA;AAAA;AAAA,cADF;AAWAH,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACD;;AACD,wBACE;AAAA,6BACM;AAAA,kBACKH;AADL;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA3BsB,C,CA6B3B;;;AACA,eAAeJ,GAAf","sourcesContent":["// Component를 위해서 꼭 있어야 함\r\nimport React, { Component } from 'react';\r\n\r\n// 여러개의 엘리먼트를 자동으로 생성하는 경우 console창에서 각각의 리스트 항목들은 키라는 props를 가지고 있어야 한다는 \r\n// 에러가 뜨는데 이때 key를 이용하여 각각의 목록을 다른 것들과 구분할 수 있도록 식별자를 써주어야 함\r\nclass TOC extends Component{\r\n    render(){\r\n      console.log('TOC render');\r\n      var lists = [];\r\n      var data = this.props.data;\r\n      var i = 0;\r\n      while(i < data.length){\r\n        lists.push(\r\n          <li key={data[i].id}>\r\n            <a \r\n              href={\"/content/\"+data[i].id}\r\n              data-id={data[i].id}\r\n              onClick={function(e){\r\n                e.preventDefault();\r\n                this.props.onChangePage(e.target.dataset.id);\r\n              }.bind(this)}\r\n              >{data[i].title}</a>\r\n          </li>);\r\n        i = i + 1;\r\n      }\r\n      return(\r\n        <nav>\r\n              <ul>\r\n                  {lists}\r\n              </ul>\r\n        </nav>\r\n      );\r\n    }\r\n  }\r\n//export를 이용해서 TOC.js를 가져다 쓰는 쪽에서 TOC라는 클래스를 가져다 쓸수 있게 됨(외부에서 연결)\r\nexport default TOC;\r\n"]},"metadata":{},"sourceType":"module"}